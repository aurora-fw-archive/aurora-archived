@startuml
title Aurora Class Structure
package "Aurora Library" <<Rect>> {
	namespace Ar #DDDDDD {
		class String <Character Type>{
			+Constructors: String, charT
			+Destructor
			.. Public ..
			+Operators: =, +, +=, []
			+Input & Output Methods
			+Getters
			-- Protected --
			#Buffer: charT
		}
	}
}

package "Aurora Framework" <<Rect>> {
	namespace Aurora #DDDDDD {
		namespace Shell #FFFFFF {
			enum ColorType {
				Background
				Foreground
			}
			enum Color {
				Black
				Blue
				Green
				Cyan
				Red
				Magenta
				Yellow
				LightGrey
				DarkGrey
				LightBlue
				LightGreen
				LightCyan
				LightRed
				LightMagenta
				LightYellow
				White
			}
			enum MessageStatus {
				Error
				Warning
				Notice
				Information
				Debug
			}
		}
		package "Cryptography" <<Rect>> #FFFFFF {
			class AES {
				+Encrypt
				+Decrypt
				__ Private __
				-Cryptography Steps
			}
		}
		package "GUI" <<Rect>> #FFFFFF {
			enum GUIApplicationFlags {
				NoneFlag
				ServiceFlag
				LauncherFlag
				HandlesOpenFlag
				HandlesCommandLineFlag
				SendEnvironmentFlag
				NonUniqueFlag
				OverrideAppIDFlag
			}
			enum WrapMode {
				Word
				Char
				WordChar
			}
			class GUIApplication {
				+GUIApplication()
				+~GUIApplication()
				.. Public ..
				+connect()
				+AppStatus : Integer
				-- Protected --
				#App* : GUIApplication
				#ID : uLong
			}
			class GUILabel {
				+GUILabel()
				.. Public ..
				+Some Setters
				+Some Getters
				-- Protected --
				#Label* : GUILabel
				#ID :uLong
				__ Private __
				-WindowParent* : GUIWindow
			}
			enum GUIWindowType {
				ToplevelWindow
				PopupWindow
			}
			enum GUIWindowPosition {
				NonePosition
				CenterPosition
				MousePosition
				AlwaysCenterPosition
				CenterParentPosition
			}
			class GUIWindow {
				+GUIWindow()
				.. Public ..
				+Some Setters
				+Some Getters
				-- Protected --
				#Window : GUIWindow
				#ID : uLong
			}
			WrapMode <|.. GUILabel
			GUIApplicationFlags o-- GUIApplication
			GUIWindowType o-- GUIWindow
			GUIWindowPosition o-- GUIWindow
			GUILabel *-- GUIWindow
		}
		package "Info" <<Rect>> #FFFFFF {
			class InfoRAM {
				__ RAM Getters __
				{static} +Virtual RAM
				{static} +Physical RAM
			}
			class InfoOS {
				__ OS Getters __
				{static} +Manufacturer()
				{static} +Architecture()
				{static} +Version()
				{static} +Name()
				{static} +UserComputerName()
			}
			InfoRAM ..|> Ar.String : Input Buffer Size
		}

	}
}
@enduml